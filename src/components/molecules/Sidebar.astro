---
import Button from "../atoms/Button.astro";

interface Props {
  userType: "agent" | "client";
}

const { userType } = Astro.props;

// Configuración de navegación por tipo de usuario
const agentNavigation = [
  { href: "/dashboard/agent", label: "Dashboard", icon: "📊" },
  { href: "/dashboard/agent/properties", label: "Properties", icon: "🏠" },
  { href: "/dashboard/agent/clients", label: "Clients", icon: "👥" },
  { href: "/dashboard/agent/transactions", label: "Transactions", icon: "💰" },
  { href: "/dashboard/agent/analytics", label: "Analytics", icon: "📈" },
];

const clientNavigation = [
  { href: "/dashboard/client", label: "Dashboard", icon: "📊" },
  { href: "/dashboard/client/properties", label: "My Properties", icon: "🏠" },
  { href: "/dashboard/client/favorites", label: "Favorites", icon: "❤️" },
  { href: "/dashboard/client/transactions", label: "My Transactions", icon: "💰" },
  { href: "/dashboard/client/documents", label: "Documents", icon: "📄" },
];

const navigation = userType === "agent" ? agentNavigation : clientNavigation;
const userTypeLabel = userType === "agent" ? "Real Estate Agent" : "Client";
---

<nav class="border-r bg-white lg:w-64 min-h-screen" data-sidebar>
  <div class="p-4">
    <!-- User Type Header -->
    <div class="mb-6 border-b pb-4">
      <h3 class="text-sm font-semibold text-gray-500 uppercase tracking-wide" data-user-label>
        {userTypeLabel}
      </h3>
      <div class="mt-2 text-xs text-gray-400" data-user-info>
        Loading user info...
      </div>
    </div>

    <!-- Navigation Links -->
    <div class="space-y-2" data-navigation>
      {navigation.map((item) => (
        <Button
          href={item.href}
          variant="link"
          size="xs"
          className="w-full text-left flex items-center gap-3 p-3 rounded-lg hover:bg-gray-50 transition-colors"
          openInNewTab={false}
        >
          <span class="text-lg">{item.icon}</span>
          <span class="text-sm font-medium">{item.label}</span>
        </Button>
      ))}
    </div>

    <!-- User Info -->
    <div class="mt-8 pt-4 border-t">
      <div class="mb-4 text-sm" data-current-user>
        <div class="font-medium text-gray-900" data-user-name>Loading...</div>
        <div class="text-gray-500" data-user-email>Loading...</div>
      </div>
      
      <Button
        href="/logout"
        variant="secondary"
        size="xs"
        className="w-full text-center"
        openInNewTab={false}
      >
        Logout
      </Button>
    </div>
  </div>

  <script>
    import { authService } from '../../services/AuthService';

    // Configuraciones de navegación (duplicadas para el cliente)
    const agentNavigation = [
      { href: "/dashboard/agent", label: "Dashboard", icon: "📊" },
      { href: "/dashboard/agent/properties", label: "Properties", icon: "🏠" },
      { href: "/dashboard/agent/clients", label: "Clients", icon: "👥" },
      { href: "/dashboard/agent/transactions", label: "Transactions", icon: "💰" },
      { href: "/dashboard/agent/analytics", label: "Analytics", icon: "📈" },
    ];

    const clientNavigation = [
      { href: "/dashboard/client", label: "Dashboard", icon: "📊" },
      { href: "/dashboard/client/properties", label: "My Properties", icon: "🏠" },
      { href: "/dashboard/client/favorites", label: "Favorites", icon: "❤️" },
      { href: "/dashboard/client/transactions", label: "My Transactions", icon: "💰" },
      { href: "/dashboard/client/documents", label: "Documents", icon: "📄" },
    ];

    async function updateSidebar() {
      const user = await authService.getCurrentUser();
      
      if (user) {
        // Actualizar información del usuario
        const userNameEl = document.querySelector('[data-user-name]');
        const userEmailEl = document.querySelector('[data-user-email]');
        const userLabelEl = document.querySelector('[data-user-label]');
        
        if (userNameEl) userNameEl.textContent = user.name;
        if (userEmailEl) userEmailEl.textContent = user.email;
        if (userLabelEl) {
          userLabelEl.textContent = user.userType === 'agent' ? 'Real Estate Agent' : 'Client';
        }

        // Actualizar navegación
        updateNavigation(user.userType);
      }
    }

    function updateNavigation(userType) {
      const navigationEl = document.querySelector('[data-navigation]');
      if (!navigationEl) return;

      const navigation = userType === 'agent' ? agentNavigation : clientNavigation;
      
      navigationEl.innerHTML = navigation.map(item => `
        <a href="${item.href}" class="w-full text-left flex items-center gap-3 p-3 rounded-lg hover:bg-gray-50 transition-colors text-primary underline-offset-4 hover:underline text-opacity-80 text-sm">
          <span class="text-lg">${item.icon}</span>
          <span class="text-sm font-medium">${item.label}</span>
        </a>
      `).join('');
    }

    // Actualizar al cargar
    document.addEventListener('DOMContentLoaded', updateSidebar);

    // Actualizar cuando cambie el tipo de usuario
    window.addEventListener('dashboardUserTypeChanged', (event) => {
      const { userType } = event.detail;
      updateNavigation(userType);
    });
  </script>
</nav>